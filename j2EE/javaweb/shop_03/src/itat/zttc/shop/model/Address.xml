<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="itat.zttc.shop.model.Address">
	<insert id="add" parameterType="Address">
		insert into t_address (name,phone,postcode,user_id) value 
			(#{name},#{phone},#{postcode},#{user.id})
	</insert>
	
	<update id="update" parameterType="Address">
		update t_address set 
			name=#{name},phone=#{phone},postcode=#{postcode} where id=#{id}
	</update>
	
	<delete id="delete" parameterType="int">
		delete from t_address where id=#{id}
	</delete>
	<!--当数据库字段与对象属性不一致时，通过resultMap映射  -->
	<resultMap type="Address" id="addressMap" autoMapping="true">
		<id column="a_id" property="id"/>
		<!-- 使用 association关联，最大问题是N+1 所以下面关联方式效率低，一般不使用-->
<!-- 		<association property="user" 
					 column="user_id" 
					 javaType="User" 
					 select="itat.zttc.shop.model.User.load"/> -->
		<!--使用下面方式  -->
		<!--1、最简单方式  -->
		<association property="user" javaType="User">
			<id column="user_id" property="id"/>
			<result column="username" property="username"/>
			<result column="nickname" property="nickname"/>
			<result column="type" property="type"/>
		</association>
	</resultMap>
	

	
	<select id="load" parameterType="int" resultMap="addressMap">
		select *,t1.id as 'a_id' from t_address t1 right join t_user t2 on(t1.user_id=t2.id) where t1.id=#{id}
	</select>
	
	<select id="list" resultMap="addressMap" parameterType="map">
		<!-- select * from t_address where user_id=#{userId} -->
		select *,t1.id as 'a_id' from t_address t1 right join t_user t2 on(t1.user_id=t2.id) where t2.id=#{userId}
	</select>
	
</mapper>    